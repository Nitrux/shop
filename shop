#! /bin/bash


i () {
    for P; do
        IFS=/ read u r t <<< "$P"
        test "$t" && { D=~/"$u/$r-$t"; git clone --depth 1 "https://github.com/$u/$r" -b "$b" "$D"; } \
                  || { D=~/"$u/$r";    git clone --depth 1 "https://github.com/$u/$r" "$D"; }

        test -f "$D/deps" &&
            while read d; do i "$d"; done < "$D/deps"

        test -d "$D/bin" &&
            find "$D/bin" -maxdepth 1 -mindepth 1 -type f -or -type l -perm -u+x -exec ln -sf {} ~/.shop/.bin \;
    done
}

u () { test $# = 0 && set */*; for d; do (cd "$d"; git pull); done; }
r () { rm -rf "$@"; }
l () { printf "%s\n" */*; }


shopt -s nullglob
mkdir -p ~/.shop; cd ~/.shop

case "$1" in ( [iurl] ) "$@";;

             ( * ) _ () { printf '%b\n' "$@"; }
                   _ "Usage: shop [\e[3;32mCMD\e[m]"
                   _ ""
                   _ "\e[3;32mCMD\e[m is any of:"
                   _ ""
                   _ "  i [pkgs]   Install the given packages."
                   _ "             shop understands this format: \e[3;32m<user/repo>[/tag]\e[m."
                   _ "             If \e[3;32m/tag\e[m is given, the package will be installed"
                   _ "             as \e[3;32muser/repo-tag\e[m. Otherwise, as \e[3;32muser/repo\e[m."
                   _ "  u [pkgs]   Update all or the given packages."
                   _ "  r [pkgs]   Remove the given packages."
                   _ "  l          List installed packages."
                   exit 1;;
             esac
